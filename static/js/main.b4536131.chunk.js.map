{"version":3,"sources":["api/instances.ts","utility/urlHelper.ts","core/asyncState.ts","store/auth/slice.ts","utility/credentialHelper.ts","api/networkService.ts","store/auth/selectors.ts","core/error.ts","store/error/actions.ts","store/error/constants.ts","api/controllers/auth.ts","utility/useAuthenticationHandling.tsx","store/auth/asyncActions.ts","components/PublicPage/PublicPage.tsx","components/Loading/Loading.tsx","components/LoadingPage/LoadingPage.tsx","components/Async/Async.tsx","components/ErrorPage/ErrorPage.tsx","components/ProtectedRoute/ProtectedRoute.tsx","components/ErrorBoundary/ErrorBoundary.tsx","store/router/selectors.ts","utility/useRedirect.ts","utility/nameof.ts","components/ValidatableInput/ValidatableInput.tsx","components/LoadingButton/LoadingButton.tsx","components/LoginForm/LoginForm.tsx","utility/getFormErrors.ts","pages/Login/Login.tsx","pages/Home/Home.tsx","pages/MobileOnly/MobileOnly.tsx","App.tsx","serviceWorker.ts","store/rootReducer.ts","store/store.ts","index.tsx"],"names":["apiInstance","axios","create","baseURL","window","location","host","includes","timeout","withCredentials","loggedUser","login","logKey","mock","MockAdapter","delayResponse","onGet","reply","localStorage","getItem","onPost","password","console","log","setItem","removeItem","AsyncState","inProcess","data","error","timerId","_inProcess","_data","_error","_timerID","this","createProcess","retryCallback","retryAfterMs","undefined","setTimeout","clearTimeout","createSuccess","createFailed","f","r1","r2","r3","initialState","user","authorized","authRequested","logout","AuthSlice","createSlice","name","reducers","getCurrentUserProcess","state","toProcess","getCurrentUserSuccess","action","toSuccess","payload","getCurrentUserFailed","toFailed","setUnauthorized","loginProcess","loginSuccess","loginFailed","logoutProcess","logoutSuccess","logoutFailed","actions","authUserFailed","dispatch","pathname","path","encodeURIComponent","href","getLoginUrl","push","store","interceptors","request","use","config","Promise","reject","response","status","getAuthStatus","auth","getAuthRequested","getLoginError","getLoginProcess","getUserState","getLogoutStatus","createSystemError","reason","isAxiosError","apiError","key","details","message","sendError","type","redirect","get","then","loginData","post","useAuthenticationHandling","useSelector","useDispatch","useEffect","a","authController","getCurrentUser","PublicPage","props","className","children","cn","React","PureComponent","Message","text","easeOut","t","value","min","max","Math","Loading","forwardRef","ref","disableShrink","size","thickness","variant","other","circleStyle","rootStyle","rootProps","circumference","PI","strokeDasharray","toFixed","round","strokeDashoffset","transform","style","width","height","role","viewBox","SIZE","cx","cy","r","fill","strokeWidth","LoadingPage","Async","dataState","errorView","processView","ErrorPage","ProtectedRoute","authenticated","userState","component","render","ErrorBoundary","hasError","errorInfo","Component","getSearch","router","search","useRedirect","redirectUrl","replace","results","RegExp","exec","decodeURIComponent","getUrlParameter","nameof","toString","ValidatableInput","useField","field","meta","id","placeholder","as","label","readonly","disableFeedback","Form","Group","controlId","Label","Control","plaintext","onChange","onBlur","isInvalid","touched","Feedback","LoadingButton","loading","buttonProps","Button","disabled","FormikLoginForm","handleSubmit","errors","loginError","noValidate","onSubmit","Object","keys","map","touch","getFormErrors","index","LoginForm","initialValues","validationSchema","Yup","shape","required","values","formikProps","Login","isAuth","Home","onClick","useCallback","Container","fluid","MobileOnly","App","history","context","exact","Boolean","hostname","match","createRootReducer","combineReducers","connectRouter","AuthReducer","createBrowserHistory","basename","routerMiddleware","createRouterMiddleware","configureStore","reducer","middleware","thunk","devTools","process","NetworkService","ReactDOM","ReactReduxContext","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b4536131.chunk.js","sourcesContent":["import axios from \"axios\"\r\nimport { getBaseUrl } from \"../utility/urlHelper\"\r\nimport MockAdapter from \"axios-mock-adapter\"\r\nimport { User } from \"../models/user\"\r\n\r\nexport const apiInstance = axios.create({\r\n    baseURL: `${getBaseUrl()}/api/v2`,\r\n    timeout: 1000,\r\n    withCredentials: true\r\n})\r\n\r\nconst loggedUser: User = { login: \"test\" }\r\nconst logKey = \"iris-template:fake-login\"\r\n\r\nconst mock = new MockAdapter(apiInstance, { delayResponse: 1500 })\r\n\r\nmock.onGet(\"/login/user\").reply(() =>\r\n    localStorage.getItem(logKey) === \"true\" ? [200, loggedUser] : [401])\r\nmock.onPost(\"/login\", { login: \"test\", password: \"test\" }).reply(() => {\r\n    console.log(\"[fake] user is logging\")\r\n    localStorage.setItem(logKey, \"true\")\r\n    return [200]\r\n})\r\nmock.onPost(\"/logout\").reply(() => {\r\n    localStorage.removeItem(logKey)\r\n    return [200]\r\n})","\r\nexport const getUrlParameter = (key: string, search: string) => {\r\n    if (!search) search = window.location.href\r\n    key = key.replace(/[\\]]/g, \"\\\\$&\")\r\n    const regex = new RegExp(\"[?&]\" + key + \"(=([^&#]*)|&|#|$)\"),\r\n        results = regex.exec(search)\r\n    if (!results) return undefined\r\n    if (!results[2]) return \"\"\r\n    return decodeURIComponent(results[2].replace(/\\+/g, \" \"))\r\n}\r\n\r\nexport const removeLastSlash = (url: string) => url.replace(/\\/+$/, \"\")\r\n\r\nexport const getBaseUrl = () => {\r\n    if (window.location.host.includes(\"localhost\")) {\r\n        return \"http://localhost:8086\"\r\n    }\r\n    if (window.location.host.includes(\"127.0.0.1\")) {\r\n        return \"http://127.0.0.1:8086\"\r\n    }\r\n    return \"\"\r\n}\r\n","import { SystemError } from \"./error\"\r\n\r\nclass AsyncState<T> {\r\n    private _inProcess: boolean\r\n    private _data?: T\r\n    private _error?: SystemError\r\n    private _timerID?: number\r\n\r\n    get inProcess() {\r\n        return this._inProcess\r\n    }\r\n\r\n    get data() {\r\n        return this._data\r\n    }\r\n\r\n    get error() {\r\n        return this._error\r\n    }\r\n\r\n    protected constructor(inProcess: boolean, data?: T, error?: SystemError, timerId?: number) {\r\n        this._inProcess = inProcess\r\n        this._error = error\r\n        this._data = data\r\n        this._timerID = timerId\r\n    }\r\n\r\n    static create<T>() {\r\n        return new AsyncState<T>(false)\r\n    }\r\n\r\n    static createProcess<T>() {\r\n        return new AsyncState<T>(true)\r\n    }\r\n\r\n    static createSuccess<T>(data: T) {\r\n        return new AsyncState<T>(false, data)\r\n    }\r\n\r\n    static createFailed<T>(error: SystemError) {\r\n        return new AsyncState<T>(false, undefined, error)\r\n    }\r\n\r\n    toProcess<T>() {\r\n        return AsyncState.createProcess<T>()\r\n    }\r\n\r\n    toProcessWithRetry<T>(retryCallback: () => void, retryAfterMs: number) {\r\n        const timerId = window.setTimeout(retryCallback, retryAfterMs)\r\n\r\n        return new AsyncState<T>(true, undefined, undefined, timerId)\r\n    }\r\n\r\n    toSuccess(data: T) {\r\n        if (this._timerID) {\r\n            clearTimeout(this._timerID)\r\n            this._timerID = undefined\r\n        }\r\n\r\n        return AsyncState.createSuccess(data)\r\n    }\r\n\r\n    toFailed<T>(error: SystemError) {\r\n        if (this._timerID) {\r\n            clearTimeout(this._timerID)\r\n            this._timerID = undefined\r\n        }\r\n\r\n        return AsyncState.createFailed<T>(error)\r\n    }\r\n\r\n    static merge2<T1, T2>(r1: AsyncState<T1>, r2: AsyncState<T2>) {\r\n        return new AsyncState<[T1, T2]>(\r\n            r1.inProcess || r2.inProcess,\r\n            r1.data && r2.data && [r1.data, r2.data],\r\n            r1.error || r2.error\r\n        )\r\n    }\r\n\r\n    static merge3<T1, T2, T3>(r1: AsyncState<T1>, r2: AsyncState<T2>, r3: AsyncState<T3>) {\r\n        return new AsyncState<[T1, T2, T3]>(\r\n            r1.inProcess || r2.inProcess || r3.inProcess,\r\n            r1.data && r2.data && r3.data && [r1.data, r2.data, r3.data],\r\n            r1.error || r2.error || r3.error\r\n        )\r\n    }\r\n\r\n    map(f: (v: T) => T) {\r\n        return this.data\r\n            ? new AsyncState(this.inProcess, f(this.data), this.error)\r\n            : this\r\n    }\r\n\r\n}\r\n\r\nexport default AsyncState","import { User } from \"../../models/user\"\r\nimport AsyncState from \"../../core/asyncState\"\r\nimport { createSlice } from \"@reduxjs/toolkit\"\r\n\r\nexport type AuthState = Readonly<{\r\n    user: AsyncState<User>\r\n    authorized: boolean\r\n    authRequested: boolean\r\n    login: AsyncState<void>\r\n    logout: AsyncState<void>\r\n}>\r\n\r\nconst initialState: AuthState = {\r\n    user: AsyncState.create(),\r\n    authorized: false,\r\n    authRequested: false,\r\n    login: AsyncState.create(),\r\n    logout: AsyncState.create()\r\n}\r\n\r\nconst AuthSlice = createSlice({\r\n    name: \"auth\",\r\n    initialState: initialState,\r\n    reducers: {\r\n        getCurrentUserProcess(state) {\r\n            state.user = state.user.toProcess()\r\n        },\r\n        getCurrentUserSuccess(state, action) {\r\n            state.authorized = true\r\n            state.authRequested = true\r\n            state.user = state.user.toSuccess(action.payload)\r\n        },\r\n        getCurrentUserFailed(state, action) {\r\n            state.authorized = false\r\n            state.authRequested = true\r\n            state.user = state.user.toFailed(action.payload)\r\n        },\r\n        setUnauthorized(state) {\r\n            state.authorized = false\r\n            state.authRequested = true\r\n            state.user = AsyncState.create()\r\n        },\r\n        loginProcess(state) {\r\n            state.login = state.login.toProcess()\r\n        },\r\n        loginSuccess(state) {\r\n            state.login = state.login.toSuccess()\r\n            state.authorized = true\r\n            state.authRequested = true\r\n        },\r\n        loginFailed(state, action) {\r\n            state.login = state.login.toFailed(action.payload)\r\n            state.user = AsyncState.create()\r\n        },\r\n        logoutProcess(state) {\r\n            state.logout = state.login.toProcess()\r\n        },\r\n        logoutSuccess(state) {\r\n            state.logout = state.logout.toSuccess()\r\n            state.user = AsyncState.create()\r\n            state.authorized = false\r\n            state.authRequested = false\r\n        },\r\n        logoutFailed(state, action) {\r\n            state.logout = state.login.toFailed(action.payload)\r\n        }\r\n    }\r\n})\r\n\r\nexport default AuthSlice.reducer\r\nexport const actions = AuthSlice.actions","import { Dispatch } from \"./storeHelper\"\r\nimport { push } from \"connected-react-router\"\r\nimport { actions } from \"../store/auth/slice\"\r\n\r\nexport const getCookie = (key: string) => {\r\n    let matches = document.cookie.match(new RegExp(\r\n        \"(?:^|; )\" + key.replace(/([$?*|{}\\]\\\\^])/g, \"\\\\$1\") + \"=([^;]*)\"\r\n    ))\r\n    return matches ? decodeURIComponent(matches[1]) : undefined\r\n}\r\n\r\nexport const getLoginUrl = (path: string): string => {\r\n    const redirectParam = `?continue=${encodeURIComponent(window.location.href)}`\r\n    // TODO сделать чтобы параметры не дублировались\r\n    return `${path}`\r\n}\r\n\r\nexport const authUserFailed = (dispatch: Dispatch) => {\r\n    const pathname = getLoginUrl(`/login`)\r\n    dispatch(actions.setUnauthorized())\r\n    dispatch(push(pathname))\r\n}","import { Store } from \"redux\"\r\nimport { apiInstance } from \"./instances\"\r\nimport { authUserFailed } from \"../utility/credentialHelper\"\r\n\r\nexport default {\r\n    setupInterceptors: (store: Store) => {\r\n        apiInstance.interceptors.request.use(config => config\r\n            , error => {\r\n                return Promise.reject(error)\r\n            })\r\n        apiInstance.interceptors.response.use(response => {\r\n            return response\r\n        }, error => {\r\n            if (error && error.response && error.response.status && error.response.status === 401) {\r\n                authUserFailed(store.dispatch)\r\n            }\r\n            return Promise.reject(error)\r\n        })\r\n    }\r\n}","import { RootState } from \"../rootReducer\"\r\n\r\nexport const getAuthStatus = (state: RootState) => state.auth.authorized\r\nexport const getAuthRequested = (state: RootState) => state.auth.authRequested\r\nexport const getLoginError = (state: RootState) => state.auth.login.error\r\nexport const getLoginProcess = (state: RootState) => state.auth.login.inProcess\r\nexport const getUserState = (state: RootState) => state.auth.user\r\nexport const getUser = (state: RootState) => state.auth.user.data\r\nexport const getLogoutStatus = (state: RootState) => state.auth.logout","import { ErrorResponse } from \"../models/errorResponse\"\r\n\r\nexport interface SystemError {\r\n    reason: string\r\n    details?: string\r\n    error: Error\r\n}\r\n\r\nexport const createSystemError = (reason: string, error: any): SystemError => {\r\n    // TODO return reason as an error.key from API\r\n    if (error.isAxiosError && error.response?.data?.error) {\r\n        const apiError = (error.response.data as ErrorResponse).error\r\n\r\n        return {\r\n            reason: apiError.key || reason,\r\n            details: apiError.message,\r\n            error\r\n        }\r\n    }\r\n\r\n    return {\r\n        reason,\r\n        error\r\n    }\r\n}","import { ERROR_OCCURRED } from \"./constants\"\r\nimport { SystemError } from \"../../models/error\"\r\nimport { Dispatch } from \"../../utility/storeHelper\"\r\n\r\nexport interface ErrorOccurred {\r\n    type: typeof ERROR_OCCURRED\r\n    payload: SystemError\r\n}\r\nexport const sendError = (dispatch: Dispatch, error: SystemError) =>\r\n    dispatch({\r\n        type: ERROR_OCCURRED,\r\n        payload: error\r\n    } as ErrorOccurred)","export const ERROR_OCCURRED = `@@error/ERROR_OCCURRED`\r\n","import { apiInstance } from \"../instances\"\r\nimport { User } from \"../../models/user\"\r\nimport { LoginData } from \"../../models/login\"\r\n\r\nexport default {\r\n    getCurrentUser: (redirect: boolean): Promise<User> =>\r\n        apiInstance.get(\"/login/user\")\r\n            .then(response => response.data),\r\n    login: (loginData: LoginData): Promise<User> =>\r\n        apiInstance.post(\"/login\", loginData)\r\n            .then(response => response.data),\r\n    logout: (): Promise<void> =>\r\n        apiInstance.post(\"/logout\")\r\n            .then(response => response.data)\r\n}","import { useDispatch, useSelector } from \"react-redux\"\r\nimport { useEffect } from \"react\"\r\nimport { getAuthRequested } from \"../store/auth/selectors\"\r\nimport { getCurrentUser } from \"../store/auth/asyncActions\"\r\n\r\nexport const useAuthenticationHandling = (redirect: boolean) => {\r\n    const authRequested = useSelector(getAuthRequested)\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        !authRequested && dispatch(getCurrentUser(redirect))\r\n    }, [authRequested, dispatch, redirect])\r\n    return authRequested\r\n}\r\n","import { ActionResult, Dispatch } from \"../../utility/storeHelper\"\r\nimport { createSystemError } from \"../../core/error\"\r\nimport { LoginData } from \"../../models/login\"\r\nimport { sendError } from \"../error/actions\"\r\nimport authController from \"../../api/controllers/auth\"\r\nimport { actions } from \"./slice\"\r\n\r\n\r\nexport const getCurrentUser = (redirect: boolean): ActionResult<Promise<void>> =>\r\n    async (dispatch: Dispatch) => {\r\n        dispatch(actions.getCurrentUserProcess())\r\n        try {\r\n            const user = await authController.getCurrentUser(redirect)\r\n            dispatch(actions.getCurrentUserSuccess(user))\r\n        }\r\n        catch (e) {\r\n            const error = createSystemError(\"Не удалось получить пользователя\", e)\r\n            dispatch(actions.getCurrentUserFailed(error))\r\n            sendError(dispatch, error)\r\n        }\r\n    }\r\n\r\nexport const login = (loginData: LoginData): ActionResult<Promise<void>> =>\r\n    async (dispatch: Dispatch) => {\r\n        dispatch(actions.loginProcess())\r\n        try {\r\n            await authController.login(loginData)\r\n            dispatch(actions.loginSuccess())\r\n        }\r\n        catch (e) {\r\n            const error = createSystemError(\"Не удалось выполнить вход\", e)\r\n            dispatch(actions.loginFailed(error))\r\n            sendError(dispatch, error)\r\n        }\r\n    }\r\n\r\n\r\nexport const logout = (): ActionResult<Promise<void>> =>\r\n    async (dispatch: Dispatch) => {\r\n        dispatch(actions.logoutProcess())\r\n        try {\r\n            await authController.logout()\r\n            dispatch(actions.logoutSuccess())\r\n        }\r\n        catch (e) {\r\n            const error = createSystemError(\"Не удалось выполнить выход\", e)\r\n            dispatch(actions.logoutFailed(error))\r\n            sendError(dispatch, error)\r\n        }\r\n    }\r\n","import React from \"react\"\r\nimport \"./PublicPage.scss\"\r\nimport { ClassProps } from \"../../utility/props\"\r\nimport cn from \"classnames\"\r\n\r\ninterface MessageProps extends ClassProps {\r\n    text?: string\r\n}\r\n\r\nconst Message: React.FC<MessageProps> = props => {\r\n    const { children, text, className } = props\r\n    return (\r\n        <div className={cn(\"public-page-message\", className)}>\r\n            <div className=\"public-page-message__text\">\r\n                {children}\r\n                {text}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface Props extends ClassProps {\r\n\r\n}\r\n\r\nclass PublicPage extends React.PureComponent<Props> {\r\n    static Message = Message\r\n\r\n    render() {\r\n        const { className, children } = this.props\r\n        return (\r\n            <div className={cn(\"public-page\", className)}>\r\n                <div className=\"public-page__header header\">\r\n                    <div className=\"header__left\">\r\n\r\n                    </div>\r\n                    <div className=\"header__right\">\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"public-page__body\">\r\n                    {children}\r\n                </div>\r\n                <div className=\"public-page__footer footer\">\r\n                    <div className=\"footer__left\">\r\n\r\n                    </div>\r\n                    <div className=\"footer__right\">\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default PublicPage","import React, { CSSProperties } from \"react\"\r\nimport \"./Loading.scss\"\r\nimport cn from \"classnames\"\r\n\r\nconst SIZE = 44\r\n\r\ninterface Props extends React.HTMLAttributes<HTMLDivElement> {\r\n    disableShrink?: boolean;\r\n    size?: number | string;\r\n    thickness?: number;\r\n    value?: number;\r\n    variant?: \"determinate\" | \"indeterminate\" | \"static\";\r\n}\r\n\r\nfunction getRelativeValue(value: number, min: number, max: number) {\r\n    return (Math.min(Math.max(min, value), max) - min) / (max - min)\r\n}\r\n\r\nfunction easeOut(t: number) {\r\n    t = getRelativeValue(t, 0, 1)\r\n    t = (t -= 1) * t * t + 1\r\n    return t\r\n}\r\n\r\nfunction easeIn(t: number) {\r\n    return t * t\r\n}\r\n\r\nconst Loading = React.forwardRef<any, Props>(function CircularProgress(props, ref) {\r\n    const {\r\n        className,\r\n        disableShrink = false,\r\n        size,\r\n        thickness = 3.6,\r\n        value = 0,\r\n        variant = \"indeterminate\",\r\n        ...other\r\n    } = props\r\n\r\n    const circleStyle: CSSProperties = {}\r\n    const rootStyle: CSSProperties = {}\r\n    const rootProps: React.HTMLAttributes<HTMLDivElement> = {}\r\n\r\n    if (variant === \"determinate\" || variant === \"static\") {\r\n        const circumference = 2 * Math.PI * ((SIZE - thickness) / 2)\r\n        circleStyle.strokeDasharray = circumference.toFixed(3)\r\n        rootProps[\"aria-valuenow\"] = Math.round(value)\r\n\r\n        if (variant === \"static\") {\r\n            circleStyle.strokeDashoffset = `${(((100 - value) / 100) * circumference).toFixed(3)}px`\r\n            rootStyle.transform = \"rotate(-90deg)\"\r\n        } else {\r\n            circleStyle.strokeDashoffset = `${(easeIn((100 - value) / 100) * circumference).toFixed(\r\n                3,\r\n            )}px`\r\n            rootStyle.transform = `rotate(${(easeOut(value / 70) * 270).toFixed(3)}deg)`\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className={cn(\"loading\",\r\n                variant === \"indeterminate\"\r\n                    ? \"loading_indeterminate\"\r\n                    : variant === \"static\" && \"loading_static\",\r\n                disableShrink && \"loading_disable-shrink\",\r\n                className\r\n            )}\r\n            style={{ width: size, height: size, ...rootStyle }}\r\n            ref={ref}\r\n            role=\"progressbar\"\r\n            {...rootProps}\r\n            {...other}\r\n        >\r\n            <svg className={\"loading__svg\"} viewBox={`${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`}>\r\n                <circle\r\n                    className=\"loading__circle\"\r\n                    style={circleStyle}\r\n                    cx={SIZE}\r\n                    cy={SIZE}\r\n                    r={(SIZE - thickness) / 2}\r\n                    fill=\"none\"\r\n                    strokeWidth={thickness}\r\n                />\r\n            </svg>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Loading","import React from \"react\"\r\nimport \"./LoadingPage.scss\"\r\nimport PublicPage from \"../PublicPage/PublicPage\"\r\nimport Loading from \"../Loading/Loading\"\r\n\r\nconst LoadingPage: React.FC = () => {\r\n    return (\r\n        <PublicPage className=\"loading-page\">\r\n            <PublicPage.Message>\r\n                <Loading size={50}/>\r\n            </PublicPage.Message>\r\n        </PublicPage>\r\n    )\r\n}\r\n\r\nexport default LoadingPage","import React from \"react\"\r\nimport { AsyncDataProps, AsyncErrorProps } from \"../../utility/asyncHelper\"\r\nimport AsyncState from \"../../core/asyncState\"\r\n\r\ninterface Props<T> {\r\n    dataState: AsyncState<T>\r\n    processView: JSX.Element\r\n    errorView: (props: AsyncErrorProps) => JSX.Element\r\n    children: (props: AsyncDataProps<T>) => JSX.Element\r\n}\r\n\r\nfunction Async<T>(props: Props<T>): JSX.Element {\r\n    const {\r\n        dataState,\r\n        errorView,\r\n        processView,\r\n        children\r\n    } = props\r\n    if (dataState.inProcess) {\r\n        return processView\r\n    }\r\n    if (dataState.error) {\r\n        return errorView({ message: dataState.error.reason })\r\n    }\r\n    return (\r\n        <>\r\n            {dataState.data\r\n                ? children({ data: dataState.data })\r\n                : null\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Async","import React from \"react\"\r\nimport \"./ErrorPage.scss\"\r\nimport PublicPage from \"../PublicPage/PublicPage\"\r\n\r\ninterface Props {\r\n    message?: string\r\n}\r\n\r\nconst ErrorPage: React.FC<Props> = props => {\r\n    const { message } = props\r\n    return (\r\n        <PublicPage className=\"error-page\">\r\n            <PublicPage.Message>\r\n                <h1 className=\"error-page__title\">Что-то пошло не так</h1>\r\n                {message\r\n                    ? <h1 className=\"error-page__text\">{message}</h1>\r\n                    : <span className=\"error-page__text\">Мы уже работаем над решением этой проблемы!</span>\r\n                }\r\n            </PublicPage.Message>\r\n        </PublicPage>\r\n    )\r\n}\r\n\r\nexport default ErrorPage","import React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { Route, RouteProps } from \"react-router\"\r\nimport { getAuthStatus, getUserState } from \"../../store/auth/selectors\"\r\nimport { useAuthenticationHandling } from \"../../utility/useAuthenticationHandling\"\r\nimport LoadingPage from \"../LoadingPage/LoadingPage\"\r\nimport Async from \"../Async/Async\"\r\nimport ErrorPage from \"../ErrorPage/ErrorPage\"\r\n\r\ninterface ProtectedRouteProps extends RouteProps {}\r\n\r\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = props => {\r\n    const authenticated = useSelector(getAuthStatus)\r\n    const userState = useSelector(getUserState)\r\n    useAuthenticationHandling(true)\r\n    if (authenticated) {\r\n        return <Route {...props}/>\r\n    }\r\n    else {\r\n        return <Route\r\n            {...props}\r\n            component={undefined}\r\n            render={() =>\r\n                <Async\r\n                    dataState={userState}\r\n                    processView={<LoadingPage/>}\r\n                    errorView={({ message }) => <ErrorPage message={message}/>}\r\n                >\r\n                    {() => <LoadingPage/>}\r\n                </Async>\r\n            }\r\n        />\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ProtectedRoute","import React from \"react\"\r\nimport ErrorPage from \"../ErrorPage/ErrorPage\"\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\ninterface State {\r\n    hasError: boolean\r\n}\r\n\r\nclass ErrorBoundary extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props)\r\n        this.state = { hasError: false }\r\n    }\r\n\r\n    static getDerivedStateFromError(): State {\r\n        return { hasError: true }\r\n    }\r\n\r\n    componentDidCatch(error: Error, errorInfo: React.ErrorInfo): void {\r\n        console.error(\"Catch error\", error, errorInfo)\r\n        // TODO log to server\r\n    }\r\n\r\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\r\n        if (this.state.hasError) {\r\n            return <ErrorPage/>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary","import { RootState } from \"../rootReducer\"\r\n\r\nexport const getLocation = (state: RootState) => state.router.location\r\nexport const getPathname = (state: RootState) => state.router.location.pathname\r\nexport const getSearch = (state: RootState) => state.router.location.search","import { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { getAuthStatus } from \"../store/auth/selectors\"\r\nimport { getSearch } from \"../store/router/selectors\"\r\nimport { getUrlParameter } from \"./urlHelper\"\r\nimport { push } from \"connected-react-router\"\r\n\r\nconst redirectParamKey = \"continue\"\r\n\r\nexport const useRedirect = () => {\r\n    const authenticated = useSelector(getAuthStatus)\r\n    const search = useSelector(getSearch)\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        const redirectUrl = getUrlParameter(redirectParamKey, search)\r\n        if (authenticated) {\r\n            if (redirectUrl) {\r\n                window.location.href = redirectUrl\r\n            }\r\n            else {\r\n                dispatch(push(\"/\"))\r\n            }\r\n        }\r\n    }, [authenticated, search, dispatch])\r\n    return authenticated\r\n}\r\n","export const nameof = <T>(name: keyof T) => name.toString()\r\n\r\nexport const nameof2 = <T1, T2>(name1: keyof T1, name2: keyof T2) => `${name1}.${name2}`","import React from \"react\"\r\nimport { useField } from \"formik\"\r\nimport Form from \"react-bootstrap/Form\"\r\nimport { ClassProps } from \"../../utility/props\"\r\nimport cn from \"classnames\"\r\n\r\nexport interface Props extends ClassProps {\r\n    id: string\r\n    name: string\r\n    type?: string\r\n    placeholder?: string\r\n    as?: React.ElementType\r\n    readonly?: boolean\r\n    label?: string\r\n    disableFeedback?: boolean\r\n}\r\n\r\nconst ValidatableInput: React.FC<Props> = props => {\r\n    const [field, meta] = useField<any>(props)\r\n    const {\r\n        id,\r\n        type,\r\n        placeholder,\r\n        as,\r\n        label,\r\n        readonly,\r\n        className,\r\n        disableFeedback\r\n    } = props\r\n\r\n    return (\r\n        <Form.Group className={cn(className)} controlId={id}>\r\n            {label && <Form.Label>{label}</Form.Label>}\r\n            <Form.Control\r\n                plaintext={!!readonly}\r\n                type={type}\r\n                as={as}\r\n                name={field.name}\r\n                placeholder={placeholder}\r\n                onChange={field.onChange}\r\n                onBlur={field.onBlur}\r\n                value={field.value}\r\n                isInvalid={meta.touched && !!meta.error}\r\n            >\r\n                {props.children}\r\n            </Form.Control>\r\n            {!disableFeedback &&\r\n                <Form.Control.Feedback type=\"invalid\">{meta.error}</Form.Control.Feedback>\r\n            }\r\n        </Form.Group>\r\n    )\r\n}\r\n\r\nexport default ValidatableInput\r\n","import React from \"react\"\r\nimport \"./LoadingButton.scss\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport Loading from \"../Loading/Loading\"\r\n\r\ninterface Props extends React.ComponentPropsWithoutRef<typeof Button> {\r\n    loading?: boolean\r\n}\r\n\r\nconst LoadingButton: React.FC<Props> = props => {\r\n    const { loading, children, ...buttonProps } = props\r\n    return (\r\n        <Button\r\n            {...buttonProps}\r\n            disabled={loading ? true : buttonProps.disabled}\r\n        >\r\n            {loading\r\n                ? <Loading className=\"loading-button__spinner\"/>\r\n                : children\r\n            }\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default LoadingButton","import React from \"react\"\r\nimport \"./LoginForm.scss\"\r\nimport { LoginData } from \"../../models/login\"\r\nimport { FormikProps, Formik } from \"formik\"\r\nimport * as Yup from \"yup\"\r\nimport Form from \"react-bootstrap/Form\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { login } from \"../../store/auth/asyncActions\"\r\nimport { getLoginError, getLoginProcess } from \"../../store/auth/selectors\"\r\nimport { nameof } from \"../../utility/nameof\"\r\nimport { getFormErrors } from \"../../utility/getFormErrors\"\r\n\r\nimport ValidatableInput from \"../ValidatableInput/ValidatableInput\"\r\nimport LoadingButton from \"../LoadingButton/LoadingButton\"\r\nimport Button from \"react-bootstrap/Button\"\r\n\r\nconst FormikLoginForm: React.FC<FormikProps<LoginData>> = props => {\r\n    const {\r\n        handleSubmit,\r\n        errors,\r\n        touched\r\n    } = props\r\n    const loginProcess = useSelector(getLoginProcess)\r\n    const loginError = useSelector(getLoginError)\r\n    return (\r\n        <div className=\"login-form\">\r\n            <div className=\"login-form__container\">\r\n                <h1 className=\"login-form__title\">Авторизация</h1>\r\n                <Form noValidate onSubmit={handleSubmit}>\r\n                    <ValidatableInput\r\n                        className=\"login-form__login\"\r\n                        id=\"loginFormLogin\"\r\n                        type=\"text\"\r\n                        name={nameof<LoginData>(\"login\")}\r\n                        placeholder=\"E-mail\"\r\n                        disableFeedback={true}\r\n                    />\r\n                    <ValidatableInput\r\n                        className=\"login-form__password\"\r\n                        id=\"loginFormPassword\"\r\n                        type=\"password\"\r\n                        name={nameof<LoginData>(\"password\")}\r\n                        placeholder=\"Пароль\"\r\n                        disableFeedback={true}\r\n                    />\r\n                    <LoadingButton\r\n                        type=\"submit\"\r\n                        className=\"login-form__submit\"\r\n                        variant=\"outline-light\"\r\n                        loading={loginProcess}\r\n                    >\r\n                        Далее\r\n                    </LoadingButton>\r\n                    <Button\r\n                        className=\"login-form__submit\"\r\n                        variant=\"outline-light\"\r\n                    >\r\n                        Зарегистрироваться\r\n                    </Button>\r\n                    <div className=\"login-form__error-container\">\r\n                        {getFormErrors<LoginData>(touched, errors).map((error, index) =>\r\n                            <h2 key={index} className=\"login-form__error\">\r\n                                {error}\r\n                            </h2>\r\n                        )}\r\n                        { loginError &&\r\n                        <h2 className=\"login-form__error\">\r\n                            {loginError.reason && loginError.reason}\r\n                        </h2>\r\n                        }\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst LoginForm: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{ login: \"\", password: \"\" }}\r\n            validationSchema={Yup.object().shape({\r\n                login: Yup.string()\r\n                    .required(\"Введите Email\"),\r\n                password: Yup.string()\r\n                    .required(\"Введите пароль\"),\r\n            })}\r\n            onSubmit={(values: LoginData) => {\r\n                dispatch(login(values))\r\n            }}\r\n        >\r\n            {formikProps => <FormikLoginForm {...formikProps} />}\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default LoginForm\r\n","import { FormikTouched, FormikErrors, FormikValues } from \"formik\"\r\n\r\nexport function getFormErrors<T extends FormikValues>(touched: FormikTouched<T>, errors: FormikErrors<T>) {\r\n    return Object.keys(touched).map(touch => errors[touch])\r\n}","import React from \"react\"\r\nimport \"./Login.scss\"\r\nimport { useAuthenticationHandling } from \"../../utility/useAuthenticationHandling\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { getUserState } from \"../../store/auth/selectors\"\r\nimport { useRedirect } from \"../../utility/useRedirect\"\r\n\r\nimport PublicPage from \"../../components/PublicPage/PublicPage\"\r\nimport LoginForm from \"../../components/LoginForm/LoginForm\"\r\nimport LoadingPage from \"../../components/LoadingPage/LoadingPage\"\r\n\r\nconst Login: React.FC = () => {\r\n    const isAuth = useRedirect()\r\n    const authRequested = useAuthenticationHandling(false)\r\n    const { inProcess } = useSelector(getUserState)\r\n    if (!isAuth && !inProcess && authRequested) {\r\n        return (\r\n            <PublicPage className=\"login\">\r\n                <LoginForm/>\r\n            </PublicPage>\r\n        )\r\n    }\r\n    return ( <LoadingPage/> )\r\n}\r\n\r\nexport default Login","import React, { useCallback } from \"react\"\r\nimport \"./Home.scss\"\r\nimport { Container } from \"react-bootstrap\"\r\nimport LoadingButton from \"../../components/LoadingButton/LoadingButton\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { getLogoutStatus } from \"../../store/auth/selectors\"\r\nimport { logout } from \"../../store/auth/asyncActions\"\r\n\r\nconst Home: React.FC = () => {\r\n    const { inProcess } = useSelector(getLogoutStatus)\r\n    const dispatch = useDispatch()\r\n    const onClick = useCallback(() => dispatch(logout()), [dispatch])\r\n    return (\r\n        <Container fluid className=\"home\">\r\n            <section className=\"home__message\">\r\n                Вы зашли в систему\r\n            </section>\r\n            <LoadingButton\r\n                onClick={onClick}\r\n                loading={inProcess}\r\n                variant=\"outline-light\"\r\n            >\r\n                Выйти\r\n            </LoadingButton>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Home","import React from \"react\"\r\nimport \"./MobileOnly.scss\"\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst MobileOnly: React.FC<Props> = () => {\r\n    return (\r\n        <div className=\"mobile-only\">\r\n            <h1>Веб-сайт доступен только с мобильного телефона</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MobileOnly","import React, { Context } from \"react\"\r\nimport { History } from \"history\"\r\nimport { ReactReduxContextValue } from \"react-redux\"\r\nimport { ConnectedRouter } from \"connected-react-router\"\r\nimport { Route, Switch } from \"react-router\"\r\n\r\nimport ProtectedRoute from \"./components/ProtectedRoute/ProtectedRoute\"\r\nimport ErrorBoundary from \"./components/ErrorBoundary/ErrorBoundary\"\r\nimport Login from \"./pages/Login/Login\"\r\nimport Home from \"./pages/Home/Home\"\r\nimport { BrowserView, MobileView } from \"react-device-detect\"\r\nimport MobileOnly from \"./pages/MobileOnly/MobileOnly\"\r\n\r\ntype Props = {\r\n  history: History,\r\n  context: Context<ReactReduxContextValue>\r\n}\r\n\r\nconst App: React.FC<Props> = ({ history, context }) => {\r\n    return (\r\n        <ErrorBoundary>\r\n            <ConnectedRouter history={history} context={context}>\r\n                <BrowserView>\r\n                    <MobileOnly/>\r\n                </BrowserView>\r\n                <MobileView>\r\n                    <Switch>\r\n                        <Route path=\"/login\" component={Login} />\r\n                        <ProtectedRoute exact path=\"/\" component={Home} />\r\n                    </Switch>\r\n                </MobileView>\r\n            </ConnectedRouter>\r\n        </ErrorBoundary>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener(\"load\", () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === \"installed\") {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log(\"Content is cached for offline use.\")\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error during service worker registration:\", error)\r\n        })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get(\"content-type\")\r\n            if (\r\n                response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                \"No internet connection found. App is running in offline mode.\"\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if (\"serviceWorker\" in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister()\r\n        })\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\"\r\nimport { History } from \"history\"\r\n\r\n// reducers\r\nimport { connectRouter, RouterState } from \"connected-react-router\"\r\nimport AuthReducer, { AuthState } from \"./auth/slice\"\r\n\r\nexport interface RootState {\r\n    router: RouterState\r\n    auth: AuthState\r\n}\r\n\r\nexport const createRootReducer = (history: History) => combineReducers<RootState, any>({\r\n    router: connectRouter(history),\r\n    auth: AuthReducer,\r\n})\r\n\r\nexport default createRootReducer","import { createBrowserHistory } from \"history\"\r\nimport { routerMiddleware as createRouterMiddleware } from \"connected-react-router\"\r\nimport thunk from \"redux-thunk\"\r\nimport { configureStore } from \"@reduxjs/toolkit\"\r\n\r\nimport createRootReducer from \"./rootReducer\"\r\n\r\nexport const history = createBrowserHistory({\r\n    basename: process.env.PUBLIC_URL + \"/\"\r\n})\r\nconst routerMiddleware = createRouterMiddleware(history)\r\n\r\nconst store = configureStore({\r\n    reducer: createRootReducer(history),\r\n    middleware: [routerMiddleware, thunk],\r\n    devTools: process.env.NODE_ENV === \"development\"\r\n})\r\n\r\nexport default store\r\n\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { Provider, ReactReduxContext } from \"react-redux\"\r\nimport NetworkService from \"./api/networkService\"\r\n\r\nimport \"./index.scss\"\r\nimport App from \"./App\"\r\nimport * as serviceWorker from \"./serviceWorker\"\r\nimport store, { history } from \"./store/store\"\r\n\r\n// initialize axios interceptors for auth\r\nNetworkService.setupInterceptors(store)\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App history={history} context={ReactReduxContext}/>\r\n    </Provider>,\r\n    document.getElementById(\"root\"))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}